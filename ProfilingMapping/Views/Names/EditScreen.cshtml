@model ProfilingMapping.Models.LogiInModel
@{
    ViewBag.Title = "EditScreen";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="alert alert-dismissible alert-danger @(String.IsNullOrEmpty(Model.ErrorMessage)?"hidden":"")">
    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    <h4 class="alert-heading">Error!!!</h4>
    <p class="mb-0">@Model.ErrorMessage</p>
</div>
<div class="card" style="">
    <div class="card-header">@ViewBag.EditScreenHeader</div>
    <div class="card-body">
        @using (Html.BeginForm("Update", "Names", FormMethod.Post, new { @name = "NamesForm" }))
        {
            <fieldset>
                @* Add class row if viewing *@
                @Html.TextBoxFor(model => model.SelectedNames.NAMEID, new { @class = "hidden", @id = "NAMEID" })
                <div class="form-group row margin_bottom_10">
                    <label for="Name" class="col-sm-2 col-form-label">First Name</label>
                    <div class="col-sm-10">
                        @* class should be form-control-plaintext when viewing *@
                        @Html.TextBoxFor(model => model.SelectedNames.FIRSTNAME, new { @class = "form-control", @id = "FIRSTNAME" })
                    </div>
                </div>

                <div class="form-group row margin_bottom_10">
                    <label for="Name" class="col-sm-2 col-form-label">Middle Name</label>
                    <div class="col-sm-10">
                        @* class should be form-control-plaintext when viewing *@
                        @Html.TextBoxFor(model => model.SelectedNames.MIDDLENAME, new { @class = "form-control", @id = "MIDDLENAME" })
                    </div>
                </div>

                <div class="form-group row margin_bottom_10">
                    <label for="Name" class="col-sm-2 col-form-label">Last Name</label>
                    <div class="col-sm-10">
                        @* class should be form-control-plaintext when viewing *@
                        @Html.TextBoxFor(model => model.SelectedNames.LASTNAME, new { @class = "form-control", @id = "LASTNAME" })
                    </div>
                </div>

                <div class="form-group row margin_bottom_10">
                    <label for="Name" class="col-sm-2 col-form-label">Barangay</label>
                    <div class="col-sm-10">
                        @{
                            var GenderList = new List<SelectListItem>();
                            GenderList.Add(new SelectListItem { Text = "MALE", Value = "MALE" });
                            GenderList.Add(new SelectListItem { Text = "FEMALE", Value = "FEMALE" });
                        }
                        @* class should be form-control-plaintext when viewing *@
                        @Html.DropDownListFor(model => model.SelectedNames.GENDER, GenderList, "Select Gender", new { @class = "form-select", @id = "GENDER" })
                    </div>
                </div>

                <div class="form-group row margin_bottom_10">
                    <label for="Name" class="col-sm-2 col-form-label">Birthdate</label>
                    <div class="col-sm-10">
                        @* class should be form-control-plaintext when viewing *@
                        @Html.TextBoxFor(model => model.SelectedNames.BIRTHDATE, "{0:yyyy-MM-dd}", new { @class = "form-control", @id = "BIRTHDATE", @type = "date" })
                    </div>
                </div>

                <div class="form-group row margin_bottom_10">
                    <label for="Name" class="col-sm-2 col-form-label">Age</label>
                    <div class="col-sm-10">
                        @* class should be form-control-plaintext when viewing *@
                        @Html.TextBoxFor(model => model.SelectedNames.AGE, new { @class = "form-control", @id = "BIRTHDATE", @type = "number" })
                    </div>
                </div>

                <div class="form-group row margin_bottom_10">
                    <label for="Name" class="col-sm-2 col-form-label">Street</label>
                    <div class="col-sm-10">
                        @* class should be form-control-plaintext when viewing *@
                        @Html.TextBoxFor(model => model.SelectedNames.STREET, new { @class = "form-control", @id = "STREET", @type = "text" })
                    </div>
                </div>

                <div class="form-group row margin_bottom_10">
                    <label for="Name" class="col-sm-2 col-form-label">Subdivision</label>
                    <div class="col-sm-10">
                        @* class should be form-control-plaintext when viewing *@
                        @Html.TextBoxFor(model => model.SelectedNames.SUBDIVISION, new { @class = "form-control", @id = "SUBDIVISION", @type = "text" })
                    </div>
                </div>

                <div class="form-group row margin_bottom_10">
                    <label for="Name" class="col-sm-2 col-form-label">Barangay</label>
                    <div class="col-sm-10">
                        @{
                            var Barangay = new List<SelectListItem>();
                            foreach (var brgy in Model.BarangayList)
                            {
                                Barangay.Add(new SelectListItem { Text = brgy.NAME, Value = brgy.BARANGAYID.ToString() });
                            }
                        }
                        @* class should be form-control-plaintext when viewing *@
                        @Html.DropDownListFor(model => model.SelectedNames.BARANGAYID, Barangay, "Select Barangay", new { @class = "form-select", @id = "NAMEID" })
                    </div>
                </div>

                <div class="form-group row margin_bottom_10">
                    <label for="Name" class="col-sm-2 col-form-label">City</label>
                    <div class="col-sm-10">
                        @* class should be form-control-plaintext when viewing *@
                        @Html.TextBoxFor(model => model.SelectedNames.CITY, new { @class = "form-control", @id = "CITY", @type = "text" })
                    </div>
                </div>

                <div class="form-group row margin_bottom_10">
                    <label for="Name" class="col-sm-2 col-form-label">Province</label>
                    <div class="col-sm-10">
                        @* class should be form-control-plaintext when viewing *@
                        @Html.TextBoxFor(model => model.SelectedNames.PROVINCE, new { @class = "form-control", @id = "PROVINCE", @type = "text" })
                    </div>
                </div>

                <script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?sensor=false"></script>
                <script type="text/javascript">
                    var Latitude = 0, Longitude = 0, isHasLocation = false;
                    window.onload = function () {

                        @{
                            var Latitude = "14.0737223";
                            var Longitude = "121.1408276";
                            var isHasLocation = false;
                            try
                            {
                                if (Model.SelectedNames.LAT is null || Model.SelectedNames.LONG is null)
                                {
                                    Latitude = "14.0737223";
                                    Longitude = "121.1408276";
                                    isHasLocation = false;
                                }
                                else
                                {
                                    Latitude = Model.SelectedNames.LAT;
                                    Longitude = Model.SelectedNames.LONG;
                                    isHasLocation = true;
                                }
                            }
                            catch (Exception e)
                            {
                                Latitude = "14.0737223";
                                Longitude = "121.1408276";
                            }
                        }
                        Latitude = @Html.Raw(Latitude);
                        Longitude = @Html.Raw(Longitude);
                        isHasLocation = '@Html.Raw(isHasLocation)' == 'False' ? false : true;
                        console.log("is has location : " + isHasLocation);
                        initLocationPicker();
                    }
                    function initLocationPicker() {
                        $("#LAT").val("");
                        $("#LONG").val("");

                        if (isHasLocation) {
                            setLocationStatusToSelected(Latitude, Longitude);
                            isHasLocation = false;
                        }
                        else {
                            var mapOptions = {
                                center: new google.maps.LatLng(Latitude, Longitude),
                                zoom: 14,
                                mapTypeId: google.maps.MapTypeId.ROADMAP
                            };
                            var infoWindow = new google.maps.InfoWindow();
                            var latlngbounds = new google.maps.LatLngBounds();
                            var map = new google.maps.Map(document.getElementById("dvMap"), mapOptions);
                            google.maps.event.addListener(map, 'click', function (e) {
                                console.log("Latitude: " + e.latLng.lat() + "\r\nLongitude: " + e.latLng.lng());
                                setLocationStatusToSelected(e.latLng.lat(), e.latLng.lng());
                            });
                        }
                    }

                    function setLocationStatusToSelected(lat,long) {
                        $("#LAT").val(lat);
                        $("#LONG").val(long);
                        selectLocation(lat, long);
                        if ($("#newLocation").hasClass("hidden")) {
                            $("#newLocation").removeClass("hidden");
                        }
                    }

                    function selectLocation(lat, long) {
                        var pointA = new google.maps.LatLng(lat, long),
                            myOptions = {
                                zoom: 18,
                                center: pointA
                            },
                            map = new google.maps.Map(document.getElementById('dvMap'), myOptions),
                            // Instantiate a directions service.
                            directionsService = new google.maps.DirectionsService,
                            directionsDisplay = new google.maps.DirectionsRenderer({
                                map: map
                            }),
                            markerA = new google.maps.Marker({
                                position: pointA,
                                title: "point A",
                                label: "Your Address",
                                map: map
                            });
                    }
                </script>

                <div class="form-group row margin_bottom_10 hidden">
                    <label for="Name" class="col-sm-2 col-form-label">Latitude</label>
                    <div class="col-sm-10">
                        @* class should be form-control-plaintext when viewing *@
                        @Html.TextBoxFor(model => model.SelectedNames.LAT, new { @class = "form-control", @id = "LAT", @type = "text" })
                    </div>
                </div>

                <div class="form-group row margin_bottom_10 hidden">
                    <label for="Name" class="col-sm-2 col-form-label">Longitude</label>
                    <div class="col-sm-10">
                        @* class should be form-control-plaintext when viewing *@
                        @Html.TextBoxFor(model => model.SelectedNames.LONG, new { @class = "form-control", @id = "LONG", @type = "text" })
                    </div>
                </div>

                <div class="form-group row margin_bottom_10">
                    <label for="Name" class="col-sm-2 col-form-label">Select Location</label>
                    <div class="col-sm-10">
                        @* class should be form-control-plaintext when viewing *@
                        <div id="dvMap" style="width: 500px; height: 500px"></div>
                        <button class="btn btn-success btn-sm hidden" id="newLocation" type="button" onclick="initLocationPicker()">Change Location</button>
                    </div>
                </div>

                <button type="submit" class="btn btn-success" href=""><i class="icon-save"></i>  Save</button>
                <a class="btn btn-primary" href="@Url.Action("ListScreen","Names")"><i class="icon-chevron-left"></i>  Back</a>
            </fieldset>
        }

    </div>
</div>